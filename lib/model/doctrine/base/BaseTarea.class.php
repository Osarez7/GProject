<?php

/**
 * BaseTarea
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idTarea
 * @property string $nombreTarea
 * @property integer $duracion
 * @property integer $statusPK
 * @property integer $prioridadPK
 * @property integer $grupoPK
 * @property integer $proyectoPK
 * @property Status $Status
 * @property Prioridad $Prioridad
 * @property Proyecto $Proyecto
 * @property Grupo $Grupo
 * @property Doctrine_Collection $Relacion_Tarea
 * @property Doctrine_Collection $RegistroEstados
 * @property Doctrine_Collection $Usuario_Tarea
 * 
 * @method integer             getIdTarea()         Returns the current record's "idTarea" value
 * @method string              getNombreTarea()     Returns the current record's "nombreTarea" value
 * @method integer             getDuracion()        Returns the current record's "duracion" value
 * @method integer             getStatusPK()        Returns the current record's "statusPK" value
 * @method integer             getPrioridadPK()     Returns the current record's "prioridadPK" value
 * @method integer             getGrupoPK()         Returns the current record's "grupoPK" value
 * @method integer             getProyectoPK()      Returns the current record's "proyectoPK" value
 * @method Status              getStatus()          Returns the current record's "Status" value
 * @method Prioridad           getPrioridad()       Returns the current record's "Prioridad" value
 * @method Proyecto            getProyecto()        Returns the current record's "Proyecto" value
 * @method Grupo               getGrupo()           Returns the current record's "Grupo" value
 * @method Doctrine_Collection getRelacionTarea()   Returns the current record's "Relacion_Tarea" collection
 * @method Doctrine_Collection getRegistroEstados() Returns the current record's "RegistroEstados" collection
 * @method Doctrine_Collection getUsuarioTarea()    Returns the current record's "Usuario_Tarea" collection
 * @method Tarea               setIdTarea()         Sets the current record's "idTarea" value
 * @method Tarea               setNombreTarea()     Sets the current record's "nombreTarea" value
 * @method Tarea               setDuracion()        Sets the current record's "duracion" value
 * @method Tarea               setStatusPK()        Sets the current record's "statusPK" value
 * @method Tarea               setPrioridadPK()     Sets the current record's "prioridadPK" value
 * @method Tarea               setGrupoPK()         Sets the current record's "grupoPK" value
 * @method Tarea               setProyectoPK()      Sets the current record's "proyectoPK" value
 * @method Tarea               setStatus()          Sets the current record's "Status" value
 * @method Tarea               setPrioridad()       Sets the current record's "Prioridad" value
 * @method Tarea               setProyecto()        Sets the current record's "Proyecto" value
 * @method Tarea               setGrupo()           Sets the current record's "Grupo" value
 * @method Tarea               setRelacionTarea()   Sets the current record's "Relacion_Tarea" collection
 * @method Tarea               setRegistroEstados() Sets the current record's "RegistroEstados" collection
 * @method Tarea               setUsuarioTarea()    Sets the current record's "Usuario_Tarea" collection
 * 
 * @package    gproject
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTarea extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tarea');
        $this->hasColumn('idTarea', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('nombreTarea', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('duracion', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('statusPK', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('prioridadPK', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('grupoPK', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('proyectoPK', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Status', array(
             'local' => 'statusPK',
             'foreign' => 'idStatus',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Prioridad', array(
             'local' => 'prioridadPK',
             'foreign' => 'idPrioridad',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Proyecto', array(
             'local' => 'proyectoPK',
             'foreign' => 'idProyecto',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Grupo', array(
             'local' => 'grupoPK',
             'foreign' => 'idGrupo',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Relacion_Tarea', array(
             'local' => 'idTarea',
             'foreign' => 'tareaDestino'));

        $this->hasMany('Registro_Estado_Tarea as RegistroEstados', array(
             'local' => 'idTarea',
             'foreign' => 'tareaPK'));

        $this->hasMany('Usuario_Tarea', array(
             'local' => 'idTarea',
             'foreign' => 'tarea'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'tar_fecha_creacion',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'tar_fecha_actulizacion',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}