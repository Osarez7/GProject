
Status:
  columns:
   idStatus: { type: integer , primary: true, autoincrement: true} 
   nombreStatus: { type: string(100), notnull: true}
   
Prioridad:
  columns:
   idPrioridad : { type: integer , primary: true, autoincrement: true} 
   nombrePrioridad: { type: string(100), notnull: true} 

Perfil:
 columns:
  idPerfil: { type: integer , primary: true, autoincrement: true} 
  perfilNombre: { type: string(100), notnull: true}



       
Proyecto:
  actAs:  
   Timestampable: 
     created:
      name: fecha_creacion
      type: timestamp 
     updated:
       name: fecha_actualizacion
       type: timestamp       
  columns:
   idProyecto: { type: integer , primary: true, autoincrement: true} 
   nombre: { type: string(100) , notnull: true }
   fechaInicio:  { type: timestamp, notnull: true}
   fechaFinal:  { type: timestamp, notnull: true}
   horasEstimadas: { type: integer , notnull: true}
   descProyecto: { type: string(200) , notnull: true}
   statusFK: { type: integer , notnull: true}
   prioridadFK: { type: integer , notnull: true} 
  relations:
   Status: {onDelete: CASCADE , local: statusFK, foreign: idStatus, foreignAlias: Proyectos}
   Prioridad: {onDelete: CASCADE , local: prioridadFK, foreign: idPrioridad, foreignAlias: Proyectos} 
   Usuario: {local: idProyecto, foreign: idUsuario,foreignAlias: Proyectos, refClass: ProyectoUsuario}

Grupo:
  columns:
    idGrupo: { type: integer , primary: true, autoincrement: true} 
    nombreGrupo: { type: string(100), notnull: true}
    descGrupo:   { type: string(200), notnull: true}
    
Usuario:  
  actAs: 
    Timestampable: 
     created:
      name: fecha_creacion
      type: timestamp 
     updated:
       name: fecha_actualizacion
       type: timestamp
  columns:
    idUsuario: { type: integer , primary: true, autoincrement: true} 
    perfilFK: { type: integer, notnull: true}
    usr_nombre: { type: string(100), notnull: true }
    usr_apellido1: { type: string(20), notnull: true }
    usr_apellido2: { type: string(20), notnull: true }
    email: { type: string(150), notnull: true}
    usr_nick: { type: string(20), notnull: true, unique: true }
    password: { type: string(32), notnull: true }
  relations:
   Perfil: {onDelete: CASCADE, local: perfilFK, foreign: idPerfil, foreignAlias: Usuarios}
   Tarea: {local: idUsuario, foreign: idTarea, foreignAlias: Tareas, refClass: UsuarioTarea}
   Proyecto: {local: idUsuario, foreign: idProyecto, foreignAlias: Usuarios, refClass: ProyectoUsuario}

    
    
Tarea:
  actAs:
    Timestampable: 
     created:
      name: tar_fecha_creacion
      type: timestamp 
     updated:
       name: tar_fecha_actulizacion
       type: timestamp
    NestedSet:
      hasManyRoots: true
      rootColumnName: root_id  
  columns:
    idTarea: { type: integer , primary: true, autoincrement: true} 
    nombreTarea: { type: string(100), notnull: true}
    fechaInicio: { type: timestamp, notnull: true}
    fechaFinal: { type: timestamp, notnull: true}
    horasEstimadas: {type: decimal , notnull: true}
    statusFK: { type: integer , notnull: true}
    prioridadFK: { type: integer , notnull: true} 
    
    proyectoFK: { type: integer , notnull: true}
  relations:
     Status: {onDelete: RESTRICT , local: statusFK, foreign: idStatus, foreignAlias: Tareas}
     Prioridad: {onDelete: RESTRICT , local: prioridadFK, foreign: idPrioridad, foreignAlias: Tareas} 
     Proyecto: {onDelete: RESTRICT , local: proyectoFK, foreign: idProyecto, foreignAlias: Tareas} 
     Usuario: {local: idTarea, foreign: idUsuario,foreignAlias: Usuarios, refClass: UsuarioTarea}
 
Avance:
  actAs:
    Timestampable: 
     created:
      name: fechaCreacion
      type: timestamp 
     updated:
       name: fechaActulizacion
       type: timestamp
  columns:
    idAvance:  { type: integer , primary: true, autoincrement: true} 
    tituloAvance: { type: string(150), notnull: true}
    resumen: { type: string(200), notnull: true}
    fechaInicio: { type: timestamp, notnull: true}
    fechaFinal: { type: timestamp, notnull: false}
    horasRequeridas: {type: decimal , notnull: true}
    tareaFK: { type: integer , notnull: true}  
  relations:
    Tarea: {onDelete: CASCADE , local: tareaFK, foreign: idTarea, foreignAlias: Avances} 
       
UsuarioTarea:
  actAs: 
   Timestampable:
    created:
      name: fecha_asignacion
      type: timestamp   
    updated:
      name: fecha_actualizacion
      type: timestamp
  columns:
     idUsuario: { type: integer , primary: true}
     idTarea: { type: integer , primary: true} 
  relations:
    usuario: {local: idUsuario, foreign: idUsuario, onDelete: CASCADE}
    tarea: {local: idTarea, foreign: idTarea, onDelete: CASCADE}
 
 
 
 
 
ProyectoUsuario:
    columns:
     idUsuario: { type: integer , primary: true}
     idProyecto: { type: integer , primary: true} 
    relations:
     usuario: {local: idUsuario, foreign: idUsuario, onDelete: CASCADE}
     proyecto: {local: idProyecto, foreign: idProyecto, onDelete: CASCADE}
   
 
 
Registro_Estado_Tarea:
 actAs: 
  Timestampable:
    created:
      name: fecha_cambio_estado
      type: timestamp   
 columns:
  idRegistroTarea: { type: integer , primary: true, autoincrement: true}
  statusFK:  { type: integer , notnull: true}
  tareaFK:  { type: integer , notnull: true}
 relations:
  Status: {onDelete: CASCADE , local:  statusFK, foreign: idStatus, foreignAlias: RegistroEstados}
  Tarea:  { onDelete: CASCADE, local:  tareaFK, foreign: idTarea , foreignAlias: RegistroEstados}


Registro_Estado_Proyecto:
 actAs: 
   Timestampable:
    created:
      name: fecha_cambio_estado
      type: timestamp   
 columns:
  idRegistroProyecto: { type: integer , primary: true, autoincrement: true} 
  statusFK:  { type: integer , notnull: true}
  proyectoFK:  { type: integer , notnull: true}
 relations:
   Status: {onDelete: CASCADE , local: statusFK, foreign: idStatus, foreignAlias: RegistroEstados}
   Proyecto:  { onDelete: CASCADE, local: proyectoFK, foreign: idProyecto , foreignAlias: RegistroEstados}

Evento:
  actAs: 
   Timestampable:
    created:
      name: fecha_creacion
      type: timestamp   
    updated:
      name: fecha_actualizacion
      type: timestamp
  columns:
    idEvento: { type: integer , primary: true, autoincrement: true} 
    nombreEvento: { type: string(100), notnull: true}
    fechaInicio: { type: timestamp, notnull: true}
    fechaFinal: { type: timestamp, notnull: true}
    diaCompleto: { type: boolean, notnull: true, default: 1}
    descEvento: { type: string(200), notnull: false}
    proyectoFK:  { type: integer , notnull: true}
  relations:
   Proyecto:  { onDelete: CASCADE, local: proyectoFK, foreign: idProyecto , foreignAlias: Eventos}    
      
    

Grupo_Usuario:
  columns:
    usuario: { type: integer , notnull: true, primary: true}
    grupo: { type: integer , notnull: true , primary: true}
  relations:   
   Usuario: { onDelete: CASCADE, local: usuario, foreign: idUsuario}
   Grupo: { onDelete: CASCADE, local: grupo, foreign: idGrupo}

Mapa:
  columns: 
   idMapa: { type: integer , primary: true, autoincrement: true} 
   nombreMapa: { type: string(150), notnull: true}
   descMapa: { type: string(200), notnull: false}
   proyectoFK: { type: integer }
  relations:
    Proyecto:  { onDelete: CASCADE, local: proyectoFK, foreign: idProyecto , foreignAlias: Mapas}    
   

Lugar:
 columns:
   idLugar: { type: integer , primary: true, autoincrement: true} 
   tituloLugar: {type: string(150)}
   infoLugar: {type: string(150)}
   latitud:  { type: decimal , notnull: true}
   longitud: { type: decimal , notnull: true}
   mapaFK: { type: integer , notnull: true} 
 relations: 
    Mapa: {onDelete: CASCADE , local: mapaFK, foreign: idMapa, foreignAlias: Lugares}
  
  

Tema:
 actAs: 
  Timestampable:
   created:
     name: fecha_creacion
     type: timestamp   
   updated:
     name: fecha_actualizacion
     type: timestamp
 columns:
   idTema: { type: integer , primary: true, autoincrement: true} 
   tituloTema: {type: string(150)}
   proyectoFK: { type: integer , notnull: true} 
   usuarioFK: { type: integer , notnull: true} 
 relations: 
    Proyecto:  { onDelete: CASCADE, local: proyectoFK, foreign: idProyecto , foreignAlias: Temas}    
    Usuario:   { onDelete: CASCADE, local: usuarioFK,  foreign: idUsuario , foreignAlias: Temas}    


Comentario:
 actAs: 
  Timestampable:
   created:
     name: fecha_creacion
     type: timestamp   
   updated:
     name: fecha_actualizacion
     type: timestamp
   NestedSet:
      hasManyRoots: true
      rootColumnName: root_id    
 columns:
   idComentario: { type: integer , primary: true, autoincrement: true} 
   contenidoComentario: {type: string(200)}
   usuarioFK: { type: integer , notnull: true} 
   temaFK: { type: integer , notnull: true} 
 relations: 
    Usuario:   { onDelete: CASCADE, local: usuarioFK,  foreign: idUsuario , foreignAlias: Temas} 
    Tema:  { onDelete: CASCADE, local: temaFK, foreign: idTema , foreignAlias: Temas} 
    

