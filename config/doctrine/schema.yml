
Status:
  columns:
   idStatus: { type: integer , primary: true, autoincrement: true} 
   nombreStatus: { type: string(50), notnull: true}
   
Prioridad:
  columns:
   idPrioridad : { type: integer , primary: true, autoincrement: true} 
   nombrePrioridad: { type: string(50), notnull: true} 

       
Proyecto:
  actAs:  
   Timestampable: 
     created:
      name: fecha_creacion
      type: timestamp 
     updated:
       name: fecha_actualizacion
       type: timestamp
       
  columns:
   idProyecto: { type: integer , primary: true, autoincrement: true} 
   nombre: { type: string(50) , notnull: true }
   tiempo_estimado: { type: integer , notnull: true} 
   descProyecto: { type: string(200) , notnull: true}
   statusPK: { type: integer , notnull: true}
   prioridadPK: { type: integer , notnull: true} 
  relations:
   Status: {onDelete: CASCADE , local: statusPK, foreign: idStatus, foreignAlias: Proyectos}
   Prioridad: {onDelete: CASCADE , local: prioridadPK, foreign: idPrioridad, foreignAlias: Proyectos} 

Grupo:
  columns:
    idGrupo: { type: integer , primary: true, autoincrement: true} 
    nombreGrupo: { type: string(50), notnull: true}
    descGrupo:   { type: string(200), notnull: true}
    
    
Tarea:
  actAs:
    Timestampable: 
     created:
      name: tar_fecha_creacion
      type: timestamp 
     updated:
       name: tar_fecha_actulizacion
       type: timestamp
  columns:
    idTarea: { type: integer , primary: true, autoincrement: true} 
    nombreTarea: { type: string(50), notnull: true}
    duracion: { type: integer , notnull: true}
    
    statusPK: { type: integer , notnull: true}
    prioridadPK: { type: integer , notnull: true} 
    grupoPK : { type: integer , notnull: false}
    proyectoPK: { type: integer , notnull: true}
  relations:
     Status: {onDelete: CASCADE , local: statusPK, foreign: idStatus, foreignAlias: Tareas}
     Prioridad: {onDelete: CASCADE , local: prioridadPK, foreign: idPrioridad, foreignAlias: Tareas} 
     Proyecto: {onDelete: CASCADE , local: proyectoPK, foreign: idProyecto, foreignAlias: Tareas} 
     Grupo: {onDelete: CASCADE , local: grupoPK, foreign: idGrupo, foreignAlias: Tareas} 

Relacion:
  columns:
   idRelacion: { type: integer , primary: true, autoincrement: true} 
   nombreRelaion: { type: string(50), notnull: true}
   
Relacion_Tarea:
 actAs: 
   Timestampable: 
     created:
      name: fecha_creacion
      type: timestamp 
     updated:
       name: fecha_actualizacion
       type: timestamp
 columns:
  idRelacionTarea: { type: integer , primary: true, autoincrement: true} 
  tareaOrigen:  { type: integer , notnull: true}
  tareaDestino: { type: integer , notnull: true}
  relacion_idRelacion:  { type: integer , notnull: true}
 relations:
  Tarea: { onDelete: CASCADE, local:  tareaOrigen, foreign: idTarea }
  Tarea: { onDelete: CASCADE, local:  tareaDestino, foreign: idTarea }
  Relacion: { onDelete: CASCADE, local: relacion_idRelacion, foreign: idRelacion }
 
 
Registro_Estado_Tarea:
 actAs: 
  Timestampable:
    created:
      name: fecha_cambio_estado
      type: timestamp   
 columns:
  idRegistroTarea: { type: integer , primary: true, autoincrement: true}
  statusPK:  { type: integer , notnull: true}
  tareaPK:  { type: integer , notnull: true}
 relations:
  Status: {onDelete: CASCADE , local:  statusPK, foreign: idStatus, foreignAlias: RegistroEstados}
  Tarea:  { onDelete: CASCADE, local:  tareaPK, foreign: idTarea , foreignAlias: RegistroEstados}


Registro_Estado_Proyecto:
 actAs: 
   Timestampable:
    created:
      name: fecha_cambio_estado
      type: timestamp   
 columns:
  idRegistroProyecto: { type: integer , primary: true, autoincrement: true} 
  statusPK:  { type: integer , notnull: true}
  proyectoPK:  { type: integer , notnull: true}
 relations:
   Status: {onDelete: CASCADE , local: statusPK, foreign: idStatus, foreignAlias: RegistroEstados}
   Proyecto:  { onDelete: CASCADE, local: proyectoPK, foreign: idProyecto , foreignAlias: RegistroEstados}

Evento:
  actAs: 
   Timestampable:
    created:
      name: fecha_cambio_estado
      type: timestamp   
    updated:
      name: fecha_actualizacion
      type: timestamp
  columns:
    idEvento: { type: integer , primary: true, autoincrement: true} 
    fechaEvento: { type: timestamp, notnull: true}
    nombreEvento: { type: string(50), notnull: true}
    descEvento: { type: string(200), notnull: false}
    proyectoPK:  { type: integer , notnull: true}
  relations:
   Proyecto:  { onDelete: CASCADE, local: proyectoPK, foreign: idProyecto , foreignAlias: Eventos}    
      
      
      
Perfil:
 columns:
  idPerfil: { type: integer , primary: true, autoincrement: true} 
  perfilNombre: { type: string(50), notnull: true}


  
Usuario:  
  actAs: 
    Timestampable: 
     created:
      name: fecha_creacion
      type: timestamp 
     updated:
       name: fecha_actualizacion
       type: timestamp
  columns:
    idUsuario: { type: integer , primary: true, autoincrement: true} 
    perfilFK: { type: integer, notnull: true}
    usr_nombre: { type: string(50), notnull: true }
    usr_apellido1: { type: string(20), notnull: true }
    usr_apellido2: { type: string(20), notnull: true }
    email: { type: string(100), notnull: true}
    usr_nick: { type: string(20), notnull: true, unique: true }
    password: { type: string(32), notnull: true }
  relations:
   Perfil: {onDelete: CASCADE, local: perfilFK, foreign: idPerfil, foreignAlias: Usuarios}


Usuario_Tarea:
  actAs: 
    Timestampable: 
     created:
      name: fecha_asignacion
      type: timestamp 
     updated:
       name: fecha_actualizacion
       type: timestamp
  columns:
    usuario: { type: integer , notnull: true, primary: true}
    tarea: { type: integer , notnull: true,   primary: true}
  relations:
   Usuario: { onDelete: CASCADE, local: usuario, foreign:  idUsuario}
   Tarea: { onDelete: CASCADE, local: tarea, foreign: idTarea }

       


    
Grupo_Usuario:
  columns:
    usuario: { type: integer , notnull: true, primary: true}
    grupo: { type: integer , notnull: true , primary: true}
  relations:   
   Usuario: { onDelete: CASCADE, local: usuario, foreign: idUsuario}
   Grupo: { onDelete: CASCADE, local: grupo, foreign: idGrupo}
  
  
